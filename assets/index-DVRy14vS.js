const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/main-D1VDddt4.js","assets/main-D1GsWl6E.css"])))=>i.map(i=>d[i]);
(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))f(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&f(r)}).observe(document,{childList:!0,subtree:!0});function i(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function f(t){if(t.ep)return;t.ep=!0;const o=i(t);fetch(t.href,o)}})();const p="modulepreload",v=function(n){return"/vivid/"+n},d={},y=function(e,i,f){let t=Promise.resolve();if(i&&i.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),s=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));t=Promise.allSettled(i.map(c=>{if(c=v(c),c in d)return;d[c]=!0;const a=c.endsWith(".css"),u=a?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${u}`))return;const l=document.createElement("link");if(l.rel=a?"stylesheet":p,a||(l.as="script"),l.crossOrigin="",l.href=c,s&&l.setAttribute("nonce",s),document.head.appendChild(l),a)return new Promise((m,h)=>{l.addEventListener("load",m),l.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${c}`)))})}))}function o(r){const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=r,window.dispatchEvent(s),!s.defaultPrevented)throw r}return t.then(r=>{for(const s of r||[])s.status==="rejected"&&o(s.reason);return e().catch(o)})},E=location.port==="5173",g=n=>{const e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.appendChild(e)};E?fetch(".").then(()=>{y(()=>import("./main-D1VDddt4.js"),__vite__mapDeps([0,1])).then(()=>{console.log("Development entry file successfully loaded")}).catch(n=>{console.error("Error loading development entry file:",n)})}).catch(n=>{console.error("Failed to fetch manifest.json in development:",n)}):fetch(".vite/manifest.json").then(n=>n.json()).then(n=>{Object.values(n).filter(e=>e.isEntry&&e.name==="main").forEach(e=>{if(e&&e.file){let i=`../${e.file}`;i.endsWith(".js")||(i+=".js"),import(i)}e.css&&e.css.forEach(i=>{g(`/vivid/${i}`)})})});
